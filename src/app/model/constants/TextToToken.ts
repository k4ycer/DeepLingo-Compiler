import { TokenTypes } from './TokenTypes';

export enum TextToToken{
    "break" = TokenTypes.BreakDingoKeyword,
    "else" = TokenTypes.ElseDingoKeyword,
    "elseif" = TokenTypes.ElseIfDingoKeyword,
    "if" = TokenTypes.IfDingoKeyword,
    "loop" = TokenTypes.LoopDingoKeyword,
    "return" = TokenTypes.ReturnDingoKeyword,
    "var" = TokenTypes.VarDingoKeyword,
    "-" = TokenTypes.MinusDingoToken,
    "--" = TokenTypes.MinusMinusDingoToken,
    "+" = TokenTypes.PlusDingoToken,
    "++" = TokenTypes.PlusPlusDingoToken,
    "*" = TokenTypes.AsteriskDingoToken,
    "/" = TokenTypes.SlashDingoToken,
    "%" = TokenTypes.PercentDingoToken,
    "!" = TokenTypes.ExclamationDingoToken,
    "&&" = TokenTypes.AmpersandAmpersandDingoToken,
    "||" = TokenTypes.BarBarDingoToken,
    "==" = TokenTypes.EqualsEqualsDingoToken, 
    "=" = TokenTypes.EqualsDingoToken,
    "!=" = TokenTypes.ExclamationEqualsDingoToken,
    ">" = TokenTypes.GreaterThanDingoToken,
    "<" = TokenTypes.LessThanDingoToken,
    ">=" = TokenTypes.GreaterThanEqualsDingoToken,
    "<=" = TokenTypes.LessThanEqualsDingoToken,
    "{" = TokenTypes.OpenBraceDingoToken,
    "}" = TokenTypes.CloseBraceDingoToken,
    "(" = TokenTypes.OpenParenDingoToken,
    ")" = TokenTypes.CloseParenDingoToken,
    "[" = TokenTypes.OpenBracketDingoToken,
    "]" = TokenTypes.CloseBracketDingoToken,
    "." = TokenTypes.DotDingoToken,
    ":" = TokenTypes.ColonDingoToken,
    ";" = TokenTypes.SemicolonDingoToken,
    "," = TokenTypes.CommaDingoToken,
    // "printi" = TokenTypes.PrintIDingoToken,
    // "printc" = TokenTypes.PrintCDingoToken,
    // "prints" = TokenTypes.PrintSDingoToken,
    // "println" = TokenTypes.PrintLnDingoToken,
    // "readi" = TokenTypes.ReadIDingoToken,
    // "reads" = TokenTypes.ReadSDingoToken,
    // "new" = TokenTypes.NewDingoToken,
    // "size" = TokenTypes.SizeDingoToken,
    // "add" = TokenTypes.AddDingoToken,
    // "get" = TokenTypes.GetDingoToken,
    // "set" = TokenTypes.SetDingoToken,
    // "main" = TokenTypes.MainDingoToken,
    " " = TokenTypes.WhiteSpace,
}